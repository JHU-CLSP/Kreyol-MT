# Confile file with default values to be used for cleaning; no language-specific values should be defined.

# The regex pattern to be used for matching carriage returns and new lines
cr_and_lf_match_pattern: '\n|\r|&#xd;?'
# The pattern with which carriage returns and new lines should be replaced
cr_and_lf_replace_pattern: ' '

# The regex pattern used to capture escaped unicode characters, identify their hexadecimal
# value, and then replace them with the appropriate character
unicode_escape_pattern: '\\u([0-9A-Fa-f]{4})'

# A list of characters to individual remove FROM segments (but not removing the segment itself)
specific_chars_to_remove:
 - '\\n' # double-backslash n
 - '\t' # tab
 - '\' # single-backslash
 - '…' # \u2026 horizontal ellipsis
 - '●' # \u25cf black circle
 - '○' # \u25cb white circle
 - '□' # \u25a1 white square
 - '■' # \u25a0 black square
 - '▪' # \u25aa black small square
 - '▫' # \u25ab white small square
 - '▲' # \u25b2 black u -pointing triangle
 - '△' # \u25b3 white u -pointing triangle
 - '▼' # \u25bc black dow -pointing triangle
 - '▽' # \u25bd white dow -pointing triangle
 - '◆' # \u25c6 black diamond
 - '◇' # \u25c7 white diamond
 - '◊' # \u25ca lozenge
 - '○' # \u25cb white circle
 - '◌' # \u25cc dotted circle
 - '◍' # \u25cd circle with vertical fill
 - '↑' # \u2191 upwards arrow
 - '↓' # \u2193 downwards arrow
 - '→' # \u2192 rightwards arrow
 - '←' # \u2190 leftwards arrow
 - '‡' # \u2021 double dagger
 - '❍' # shadowed white circle
 - '✔' # heavy check mark




# The type of unicord normalization to apply to each unit. 
# See https://docs.python.org/3/library/unicodedata.html#unicodedata.normalize for more information
unicode_normalization_mode: 'NFKC'

# A list of valid whitespace characters
allowed_spaces:
  - "\u0020" # ascii space

# The character with which invalid whitespace characters are to be replaced
replacement_space: "\u0020" # ascii space

# Whether or not to run the normalize_quotes() step
normalize_quotes: True

# FIX ME - not sure how to document these rn
allowed_quotes: "\u0022" # ascii straight quotes
replacement_quotes: "\u0022" # ascii straight quotes
allowed_single_quotes: "\u0027" # ascii straight single quote
replacement_single_quotes: "\u0027"  # ascii straight single quote

# Individual characters that should be substituted out for other characters
normalize_characters:
  '8230': '' # Remove ellipsis
  '8226': '' # Remove bullet •
  '9702': '' # Remove White bullet ◦
  '0182': '' # Remove ¶
  '0042': '' # Remove *
  '0180': '0039' # replace ´ with '
  '8260': '0047' # Replace fraction slash with forward slash
  '0169': '' # Remove ©
  '8224': '' # Remove †

# This parameter should only be used in language-specific config files, but can
# define a list of all valid characters for a language. Currently, decimal values are used
# for example:
#   allowed_characters:
#     - '32' # space
#     - '33' # exclamation mark
#     ... etc

# The value for which characters with a lower frequency will be considered invalid by the statistical_character_set
character_frequency_cutoff: 0.0005
# The value for which entire unicode blocks with a lower frequency will be considered invalid by the statistical_character_set
block_frequency_cutoff: 0.1

# A list of regex patterns which, if matched in any unit, will cause the unit to be deleted
remove_regex_patterns:
  - 'org\.ldschurch'
  - '(Bpt|Ph|Ept)@'
  - '%\d\$\w'
  - '%s'
  - '%\w'
  - '\\ud83d\\ude\d\d' # Emoji
  - '\\ud83d\\ude\d\d' # Emoji

# A list of regex patterns (keys) that will be substituted for by the corresponding values
normalize_regex_patterns:
  '\\!': '!'
  '\\:': ':'
  '\\n': ' '
  '\\t': ' '
  # '(?<=[^\s–\-—\/\-,:#$%]\b)(?<!\d\.)(\d+)$': '' # Remove footnotes
  '^! ': '' # Remove ! with a space at the beginning of a segment
  '^!': '' # Remove any ! at the beginning of a segment
  '^\. ': '' # Remove any full stop at the beginning of a segment if there is a space after
  '^#+': '' # Remove one or more # at the beginning of a segment
  '^- #+': '' # Remove - ## or - ### at the beginning of a segment
  '^–+': '' # Remove one or more – at the beginning of a sentence
  '^—+': '' # Remove one or more — at the beginning of a sentences
  '^-+': '' # Remove one or more - at the beginning of a sentence
  '__+': '_' #Turn contiguous underline characters into a single underline.
  # Need two of these because the positive lookbehinds are fixed-width.
  '(?<=^\d)\.(?=[a-zA-Z])': '. ' # Convert a bullet number with no space to one with a space (ex: 14.hello -> 14. hello)
  '(?<=^\d\d)\.(?=[a-zA-Z])': '. ' # Convert a bullet number with no space to one with a space (ex: 14.hello -> 14. hello)
  '^\d+–\d+, ': '' # Remove starting verse ranges (eg. 7–8, He is in the midst of His Saints, who will soon see Him; -> He is in the midst of His Saints, who will soon see Him;)
  '^_ ': '' # Remove a leading underscore and space if it occurs.
  '^\d+(?=[A-Za-z])': '' # Remove the verse number when it occurs
  '(?<=^)_(?=\w)|(?<= )_(?=\w)|(?<=\w)_(?=$)|(?<=\w)_(?= )': '' # Remove any beginning or ending _ directly next to a word (i.e. _this_ or _this or this_)
  '&#?39;?': "'"
  '&#?8217;?': "'"

specific_chars_to_remove:
 - '\\n' # double-backslash n
 - '\t' # tab
 - '\' # single-backslash
 - '…' # \u2026 horizontal ellipsis

# Whether or not to check for words that are too long
remove_long_words: True
# The 0-length regex pattern for identifying the beginning of words
word_initial_delimiter: '\b'
# The 0-length regex pattern for identifying the end of words
word_final_delimiter: '\b'
# The cutoff value for what we consider to be too long of a word
longest_word_length: 30

# These are used by the check_sentence_length_ratios() function
length_ratio_sd: 7
sent_length_ratio_cutoff: 6

# The outlier-defining number of st. devs for which units with too many characters will be removed
maximum_length_sd: 5

# The minimum number of words needed to keep a unit (defined by our word delimiters above)
min_num_words: 3

# Used by remove_nonalpha
nonalpha_cutoff: 7

glottle_stop: "\u0294"  # ʔ

use_edit_distance: False

# Must be provided if use_edit_distance is True
min_valid_edit_dist_raw: 20
min_valid_edit_dist_ratio: .1 

# Used by remove_too_short()
CJK: False
